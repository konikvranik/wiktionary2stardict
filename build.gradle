plugins {
	id 'java'
	id 'org.springframework.boot' version '4.0.0-M1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'io.freefair.lombok' version '8.4'
	id 'com.github.ben-manes.versions' version '0.52.0'
	id 'nl.littlerobots.version-catalog-update' version '1.0.0'
}

group = 'net.suteren.stardict'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-liquibase'
	implementation 'org.springframework.boot:spring-boot-starter-restclient'
	implementation 'info.picocli:picocli:4.7.5'
	implementation 'com.vdurmont:semver4j:3.1.0'
	annotationProcessor 'info.picocli:picocli-codegen:4.7.5'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.processResources.finalizedBy tasks.register('applicationVersion') {
	doFirst {
		new File(sourceSets.main.output.resourcesDir, 'version.properties').write "version=${version}\n"
	}
	tasks.assemble.dependsOn it
}

tasks.named('test') {
	useJUnitPlatform()
}
